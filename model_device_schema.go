/*
Youless energy monitor GO client

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package youless

import (
	"encoding/json"
)

// DeviceSchema struct for DeviceSchema
type DeviceSchema struct {
	Model *string `json:"model,omitempty"`
	Mac *string `json:"mac,omitempty"`
}

// NewDeviceSchema instantiates a new DeviceSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceSchema() *DeviceSchema {
	this := DeviceSchema{}
	return &this
}

// NewDeviceSchemaWithDefaults instantiates a new DeviceSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceSchemaWithDefaults() *DeviceSchema {
	this := DeviceSchema{}
	return &this
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *DeviceSchema) GetModel() string {
	if o == nil || o.Model == nil {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceSchema) GetModelOk() (*string, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *DeviceSchema) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *DeviceSchema) SetModel(v string) {
	o.Model = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *DeviceSchema) GetMac() string {
	if o == nil || o.Mac == nil {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceSchema) GetMacOk() (*string, bool) {
	if o == nil || o.Mac == nil {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *DeviceSchema) HasMac() bool {
	if o != nil && o.Mac != nil {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *DeviceSchema) SetMac(v string) {
	o.Mac = &v
}

func (o DeviceSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Model != nil {
		toSerialize["model"] = o.Model
	}
	if o.Mac != nil {
		toSerialize["mac"] = o.Mac
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceSchema struct {
	value *DeviceSchema
	isSet bool
}

func (v NullableDeviceSchema) Get() *DeviceSchema {
	return v.value
}

func (v *NullableDeviceSchema) Set(val *DeviceSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceSchema(val *DeviceSchema) *NullableDeviceSchema {
	return &NullableDeviceSchema{value: val, isSet: true}
}

func (v NullableDeviceSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


