{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "0.1.7.1",
    "title" : "Youless energy monitor GO client",
    "description" : ""
  },
  "servers" : [ {
    "description" : "Local device",
    "url" : "http://192.168.178.206/"
  } ],
  "components" : {
    "schemas" : {
      "DeviceSchema" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "type" : "string"
          },
          "mac" : {
            "type" : "string"
          }
        }
      },
      "OutputFormat" : {
        "type" : "string",
        "enum" : [ "j" ]
      },
      "GetUploadedValuesResponse" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/UploadedValues"
        }
      },
      "UploadedValues" : {
        "type" : "object",
        "properties" : {
          "tm" : {
            "description" : "unix-time-format (1489333828 => Sun, 12 Mar 2017 15:50:28 GMT)\n",
            "type" : "integer",
            "format": "int64"
          },
          "net" : {
            "type" : "number",
            "format" : "float",
            "description" : "Netto counter, as displayed in the web-interface of the LS-120. It seems equal to: p1 + p2 - n1 - n2 Perhaps also includes some user set offset.\n"
          },
          "pwr" : {
            "type" : "integer",
            "description" : "Actual power use in Watt (can be negative)"
          },
          "p1" : {
            "type" : "number",
            "format" : "float",
            "description" : "P1 consumption counter (low tariff)"
          },
          "p2" : {
            "type" : "number",
            "format" : "float",
            "description" : "P2 consumption counter (high tariff)"
          },
          "n1" : {
            "type" : "number",
            "format" : "float",
            "description" : "N1 production counter (low tariff)"
          },
          "n2" : {
            "description" : "N2 production counter (high tariff)",
            "type" : "number",
            "format" : "float"
          },
          "gas" : {
            "description" : "counter gas-meter (in m^3)",
            "type" : "number",
            "format" : "float"
          },
          "cs0" : {
            "type" : "number",
            "format" : "float",
            "description" : "kWh counter of S0 input\n"
          },
          "ps0" : {
            "type" : "integer",
            "description" : "Computed power\n"
          },
          "ts0" : {
            "type" : "integer",
            "format": "int64",
            "description" : "Unix timestamp of the last S0 measurement.\n"
          },
          "gts" : {
            "type" : "integer",
            "format": "int64",
            "description" : "Last timestamp created by the 'smart meter'. \"1711032100\" = 2017/11/03 21:00 (yyMMddhhmm) Can be used to see if P1 communication fails.\n"
          }
        }
      },
      "BasicStatusInfo" : {
        "type" : "object",
        "properties" : {
          "cnt" : {
            "type" : "string",
            "description" : "counter in kWh"
          },
          "pwr" : {
            "type" : "integer",
            "description" : "Power consumption in Watt"
          },
          "lvl" : {
            "type" : "integer",
            "description" : "moving average level (intensity of reflected light on analog meters)"
          },
          "dev" : {
            "type" : "string",
            "description" : "deviation of reflection"
          },
          "det" : {
            "type" : "string"
          },
          "con" : {
            "type" : "string",
            "description" : "connection status"
          },
          "sts" : {
            "type" : "string",
            "description" : "Time until next status update with online monitoring"
          },
          "cs0" : {
            "type" : "string",
            "description" : "kWh counter of S0 input"
          },
          "ps0" : {
            "description" : "Computed power",
            "type" : "integer"
          },
          "raw" : {
            "type" : "integer",
            "description" : "raw 10-bit light reflection level (without averaging)"
          }
        }
      }
    }
  },
  "paths" : {
    "/e" : {
      "get" : {
        "summary" : "Uploaded Values",
        "operationId" : "GetUploadedValues",
        "description" : "The url \"/e\" will output the same values as being used to upload and are thus firmware dependant. These were probably used for debugging, but can also be used for other applications like connecting to Domoticz or OpenHab.\n",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "appliation/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetUploadedValuesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/a" : {
      "get" : {
        "operationId" : "GetBasicInfo",
        "description" : "Basic status info",
        "parameters" : [ {
          "in" : "query",
          "name" : "f",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/OutputFormat"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "appliation/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicStatusInfo"
                }
              },
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/d" : {
      "get" : {
        "operationId": "GetDeviceInfo",
        "description" : "Device info",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "appliation/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceSchema"
                }
              }
            }
          }
        }
      }
    }
  }
}